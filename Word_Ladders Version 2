import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class wordLadder_ver2{
  static boolean isValidWord(String word){
		File file = new File("C:/Users/Raymond/Downloads/eclipse-SDK-4.2-win32-x86_64/eclipse/configuration/org.eclipse.osgi/bundles/156/2/.cp/dictionaries/en_US.dictionary");
		String line ="";
		try {
			Scanner scanner = new Scanner(file);
			while(scanner.hasNextLine()){
				line=scanner.nextLine();
				line=line.toLowerCase();
				if(line.compareTo(word)==0){
					scanner.close();
					return true;
				}
			}
			scanner.close();
		}
		catch(FileNotFoundException e){
			System.out.println("File not found");
			return false;
		}
		return false;
	}
	static boolean createLadder(String startWord, String targetWord, ArrayList<String> used){
		used.add(startWord);
		return createTheLadder(startWord, targetWord, used);
	}
	static boolean createTheLadder(String startWord, String targetWord, ArrayList<String> used){
		String str = "abcdefghijklmnopqrstuvwxyz";
		if(startWord.length()!=targetWord.length()){
			System.out.println("Words are of different length");
			return false;
		}
		if(startWord.compareTo(targetWord)==0)
			return true;
		String tmp=startWord;
		for(int i=startWord.length()-1; i>=0; i--){
			if(startWord.charAt(i)!=targetWord.charAt(i)){
				tmp = startWord.substring(0,i)+targetWord.charAt(i)+startWord.substring(i+1);
				if(!used.contains(tmp)&&isValidWord(tmp)){
					used.add(tmp);
					//System.out.println("Word is now: "+tmp);
					if(createTheLadder(tmp, targetWord, used)){
						for(int k=0; k<used.size();k++){
							System.out.print(used.get(k)+" ");
						}
						System.out.println();
						return true;
					}
					//else
						//used.remove(tmp);
				}
					
			}
		}
		for(int i=0; i<startWord.length();i++){
			for(int k=0;k<str.length();k++){
				if(!(startWord.charAt(i)==targetWord.charAt(i))){
					tmp = startWord.substring(0,i)+str.charAt(k)+startWord.substring(i+1);
					if(!used.contains(tmp)&&isValidWord(tmp)){
						used.add(tmp);
						//System.out.println("Word is now: "+tmp);
						if(createTheLadder(tmp, targetWord, used)){
							for(int j=0; j<used.size();j++){
								System.out.print(used.get(j)+" ");
							}
							System.out.println();
							return true;
						}
					}
					//else
						//used.remove(tmp);
				}
			}
		}
		return false;
	}
	public static void main(String[] args){
		double time = System.currentTimeMillis();
		createLadder("feat", "peek", new ArrayList<String>());
		System.out.println(System.currentTimeMillis()-time);
	}
}
